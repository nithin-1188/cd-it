1.SUBSTITUTION(CAESAR CIPHER)
#include <stdio.h>
#include <string.h>
#include <ctype.h> // For isalpha, islower, isupper
void encrypt(char text[], int key) {
int i;
for (i = 0; text[i] != '\0'; ++i) {
if (isalpha(text[i])) { // Check if the character is an alphabet
char base = islower(text[i]) ? 'a' : 'A';
text[i] = (char)(((text[i] - base + key) % 26) + base);
}
}
}
void decrypt(char text[], int key) {
int i;
for (i = 0; text[i] != '\0'; ++i) {
if (isalpha(text[i])) { // Check if the character is an alphabet
char base = islower(text[i]) ? 'a' : 'A';
// Add 26 to handle negative results from modulo for decryption
text[i] = (char)(((text[i] - base - key + 26) % 26) + base);
}
}
}
int main() {
char message[100];
int key;
printf("Enter a message: ");
fgets(message, sizeof(message), stdin);
// Remove the newline character if present
message[strcspn(message, "\n")] = 0;
printf("Enter the key (an integer): ");
scanf("%d", &key);
// Encryption
encrypt(message, key);
printf("Encrypted message: %s\n", message);
// Decryption
decrypt(message, key); // Decrypting the already encrypted message
printf("Decrypted message: %s\n", message);
return 0;
}
